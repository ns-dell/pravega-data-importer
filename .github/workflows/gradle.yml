#
# Copyright Pravega Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: build

# Set up when this workflow will run.
on:
  push:
    branches:
      - master                 # On every push to the master branch.
      - 'r[0-9]+.[0-9]+'       # On every push to a release branch.
  pull_request:                # On every pull request, regardless of source/target branch.
  release:
    types:
      - published              # On every published release.

# Define a few constants that are shared across all the jobs.
env:
  GLOBAL_CACHE_PATH: |
    ~/.gradle
    ~/.m2
  GLOBAL_CACHE_KEY: gradle-m2-java-11
  GLOBAL_CACHE_RESTORE_KEYS: |
    gradle-m2-java-
    gradle-m2
  # We cache the class files, resources and build output. This is generated on the build job and reused in dependent jobs.
  # If there are subsequent builds this includes test execution.
  BUILD_CACHE_PATH: |
    .gradle
    ./bin
    **/bin
    **/build

  REPORTS_LOCATIONS: |
    ./build/reports
    # if this becomes a multi-project build, look for nested build reports
    #./*/build/reports ./*/*/build/reports ./*/*/*/build/reports

  # Set 'GRADLE_OPTS' to pass additional custom parameters to each ./gradlew invocation in this workflow.
  # Example '--info' or '--debug'.
  #GRADLE_OPTS: --info

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Build Information
        run: echo Building a '${{ github.event_name }}' for target '${{ github.ref }}'.
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Gradle & Maven Cache
        uses: actions/cache@v3
        with:
          path: ${{env.GLOBAL_CACHE_PATH}}
          key: ${{env.GLOBAL_CACHE_KEY}}
          restore-keys: ${{env.GLOBAL_CACHE_RESTORE_KEYS}}
      - name: Build Output Cache
        uses: actions/cache@v3
        with:
          path: ${{env.BUILD_CACHE_PATH}}
          key: ${{github.ref}}-${{github.run_id}}-${{github.job}}
          restore-keys: |
            ${{github.ref}}
      - name: Clean
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: ./gradlew clean ${{env.GRADLE_OPTS}}
      - name: Compile & Checkstyle
        run: ./gradlew jar compileTest checkstyleMain checkstyleTest --parallel ${{env.GRADLE_OPTS}}
# Uncomment these two lines if you need ssh access to debug a build.
#      - name: Setup upterm session
#        uses: lhotari/action-upterm@v1
  test:
    name: Test
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Gradle & Maven Cache
        uses: actions/cache@v3
        with:
          path: ${{env.GLOBAL_CACHE_PATH}}
          key: ${{env.GLOBAL_CACHE_KEY}}
          restore-keys: ${{env.GLOBAL_CACHE_RESTORE_KEYS}}
      - name: Build Output Cache
        uses: actions/cache@v3
        with:
          path: ${{env.BUILD_CACHE_PATH}}
          key: ${{github.ref}}-${{github.run_id}}-${{github.job}}
          restore-keys: |
            ${{github.ref}}
      - name: Tests
        run: ./gradlew test --parallel ${{env.GRADLE_OPTS}}
      - name: Upload to Codecov
        uses: codecov/codecov-action@v1
  spotbugs:
    name: Spotbugs
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Gradle & Maven Cache
        uses: actions/cache@v3
        with:
          path: ${{env.GLOBAL_CACHE_PATH}}
          key: ${{env.GLOBAL_CACHE_KEY}}
          restore-keys: ${{env.GLOBAL_CACHE_RESTORE_KEYS}}
      - name: Build Output Cache
        uses: actions/cache@v3
        with:
          path: ${{env.BUILD_CACHE_PATH}}
          key: ${{github.ref}}-${{github.run_id}}-${{github.job}}
          restore-keys: |
            ${{github.ref}}
      - name: Spotbugs
        run: ./gradlew spotbugsMain spotbugsTest --parallel ${{env.GRADLE_OPTS}}
  upload_reports:
    name: Upload Reports
    if: ${{ always() }}
    needs: [test, spotbugs]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build Output Cache
        uses: actions/cache@v3
        with:
          path: ${{env.BUILD_CACHE_PATH}}
          key: ${{github.ref}}-${{github.run_id}}-${{github.job}}
          restore-keys: |
            ${{github.ref}}
      - name: Tar Reports
        run: tar --use-compress-program zstd -cf data-importer-build-reports-${{github.run_id}}-${{github.run_attempt}}.tzst `echo ${{env.REPORTS_LOCATIONS}}`
      - name: Upload Reports
        uses: actions/upload-artifact@v3
        with:
          name: data-importer-build-reports-${{github.run_id}}-${{github.run_attempt}}
          retention-days: 4
          path: data-importer-build-reports-${{github.run_id}}-${{github.run_attempt}}.tzst
